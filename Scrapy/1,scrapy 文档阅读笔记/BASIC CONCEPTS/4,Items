Creating items
>>> product = Product(name='Desktop PC', price=1000)
>>> print(product)
Product(name='Desktop PC', price=1000)


Creating dicts from items:
>>> dict(product) # create a dict from all populated values
{'price': 1000, 'name': 'Desktop PC'}


Creating items from dicts:
>>> Product({'name': 'Laptop PC', 'price': 1500})
Product(price=1500, name='Laptop PC')


You can extend Items
(to add more fields or to change some metadata for some fields)
by declaring a subclass of your original Item.
For example:
>>>class DiscountedProduct(Product):
>>>    discount_percent = scrapy.Field(serializer=str)
>>>    discount_expiration_date = scrapy.Field()
You can also extend field metadata by
using the previous field metadata and appending more values,
or changing existing values, like this:
>>>class SpecificProduct(Product):
>>>    name = scrapy.Field(Product.fields['name'], serializer=my_serializer)


