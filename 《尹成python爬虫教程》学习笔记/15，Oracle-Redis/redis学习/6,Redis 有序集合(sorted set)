Redis 有序集合(sorted set)
Redis有序集合和集合一样也是string类型元素的集合,且不允许重复的成员。
不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
有序集合的成员是唯一的,但分数(score)却可以重复。
集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。
集合中最大的成员数为 1<<32 - 1 (4294967295, 每个集合可存储40多亿个成员)。[1<<32 == 2的32次方]
string类型元素的集合,且不允许重复的成员！有序集合的成员是唯一的,但分数(score)却可以重复！
string类型元素的集合,且不允许重复的成员！有序集合的成员是唯一的,但分数(score)却可以重复！
string类型元素的集合,且不允许重复的成员！有序集合的成员是唯一的,但分数(score)却可以重复！


1，增加
ZADD key score1 member1 [score2 member2]
向有序集合添加一个或多个成员，或者更新已存在成员的分数


2，查找
【注意索引（排名）、分数、字典，三种查找的方式。】
ZCARD key
获取有序集合的成员数

ZCOUNT key min max
计算在有序集合中指定区间分数的成员数
redis 127.0.0.1:6379> ZADD myzset 1 "hello"
(integer) 1
redis 127.0.0.1:6379> ZADD myzset 1 "foo"
(integer) 1
redis 127.0.0.1:6379> ZADD myzset 2 "world" 3 "bar"
(integer) 2
redis 127.0.0.1:6379> ZCOUNT myzset 1 3
(integer) 4
ZLEXCOUNT key min max
在有序集合中计算指定字典区间内成员数量
redis 127.0.0.1:6379> ZADD myzset 0 a 0 b 0 c 0 d 0 e
(integer) 5
redis 127.0.0.1:6379> ZADD myzset 0 f 0 g
(integer) 2
redis 127.0.0.1:6379> ZLEXCOUNT myzset - +
(integer) 7
redis 127.0.0.1:6379> ZLEXCOUNT myzset [b [f
(integer) 5

ZRANGE key start stop [WITHSCORES]
通过索引区间返回有序集合指定区间内的成员
ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]
通过分数返回有序集合指定区间内的成员
ZRANGEBYLEX key min max [LIMIT offset count]
通过字典区间返回有序集合的成员

ZRANK key member
返回有序集合中指定成员的索引
ZREVRANK key member
返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序
ZSCORE key member
返回有序集中，成员的分数值

ZREVRANGE key start stop [WITHSCORES]
返回有序集中指定区间内的成员，通过索引，分数从高到低
ZREVRANGEBYSCORE key max min [WITHSCORES]
返回有序集中指定分数区间内的成员，分数从高到低排序

【集合】
交集：ZINTERSTORE destination numkeys key [key ...]
计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中
并集：ZUNIONSTORE destination numkeys key [key ...]
计算给定的一个或多个有序集的并集，并存储在新的 key 中

ZSCAN key cursor [MATCH pattern] [COUNT count]
迭代有序集合中的元素（包括元素成员和元素分值）

3，删除
ZREM key member [member ...]
移除有序集合中的一个或多个成员

ZREMRANGEBYRANK key start stop
移除有序集合中给定的排名（索引）区间的所有成员
ZREMRANGEBYSCORE key min max
移除有序集合中给定的分数区间的所有成员
ZREMRANGEBYLEX key min max
移除有序集合中给定的字典区间的所有成员


4，修改
ZINCRBY key increment member
有序集合中对指定成员的分数加上增量 increment